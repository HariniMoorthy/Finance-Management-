@inherits LayoutComponentBase
@layout Layout.MainLayout
@using Microsoft.AspNetCore.Authorization
@using Finance.Services

@inject NavigationManager NavigationManager;
@inject DataManagementService dataService
@inject IDialogService DialogService

<MyMudProvider />
<MudAppBar Color="Color.Primary" Fixed="true" Dense="false" Elevation="4"
>
    <MudIcon class="cursor-pointer" Icon="@Icons.Material.Filled.Menu" @onclick="@ToggleDrawer" />
    <MudText Align="Align.Center" Class="py-3 ml-4 cursor-pointer" Typo="Typo.h5" >Expense Tracker</MudText>
    <MudSpacer />

    <MudStack Row="true" AlignItems="AlignItems.Center">
   
        <MudMenu style="margin-right:12px;" ActivationEvent="@MouseEvent.LeftClick" AnchorOrigin="Origin.BottomLeft"
            TransformOrigin="Origin.TopCenter">
            <ActivatorContent>
            
                        <MudAvatar Size="Size.Medium" Color="Color.Primary" Style="text-transform: uppercase;">
                            @dataService.getUserEmail().Substring(0, 1)
                        </MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudText   Class="mb-2 mt-2" Color="Color.Default" >Settings
                </MudText>
                <MudText  Class="mb-2 mt-2" Color="Color.Error" @onclick="OpenDialog"  >Sign Out
                </MudText>
            </ChildContent>
        </MudMenu>
    </MudStack>
</MudAppBar>

<MudPaper Style="overflow:hidden; ">
    <MudDrawerContainer Class="mud-height-full">
            <MudDrawer @bind-Open="@open" Elevation="0" Variant="@DrawerVariant.Mini" Color="Color.Primary">
                <MudNavMenu Bordered="true" Class="d-flex flex-column justify-space-between"
                    Style="height: 100%;width:100%; ">
                    <MudElement class="mt-16">
                        <MudNavLink class="mt-4" Match="NavLinkMatch.All" Href="/home" Icon="@Icons.Material.Filled.HomeMax">
                           Home
                        </MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Href="/categories/create" Icon="@Icons.Material.Outlined.Create">
                           Add Category
                        </MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Href="/transactions/create" Icon="@Icons.Material.Filled.AllOut">
                           create transaction
                        </MudNavLink>
                      
                    </MudElement>
                </MudNavMenu>
            </MudDrawer>
            <MudStack>           
                @Body
</MudStack>
    </MudDrawerContainer>
</MudPaper>


<style>

    .mud-theme-primary {
        background: #100e1c!important;
        backdrop-filter: blur(30px);
    }

    .mud-drawer:not(.mud-drawer-fixed) {
        position: fixed;
    }

    .mud-nav-item{
       
    padding-block: 4px;
    margin-block: 4px;
    transition: all 300ms ease;
        
    }
    .mud-nav-item:hover {
        background: linear-gradient(to left, rgba(112, 93, 242, .1), rgba(112, 93, 242, 0)) ;
        transition: all 300ms ease;
    }

    .mud-navmenu.mud-navmenu-default .mud-nav-link.active:not(.mud-nav-link-disabled) {
        color: var(--mud-palette-primary);
        background: linear-gradient(to left, rgba(112, 93, 242, .25), rgba(112, 93, 242, 0)) !important;
        @* background: rgba(0, 0, 0, .2) !important; *@
        padding-block: 20px;
        transition: all 300ms ease;
    }


    .shadow-button2 {
        margin-top: 16px;
        margin-bottom: 8px;
        transition: 0.4s;
        transition-property: all;
        background-color: rgba(30, 133, 123, 0.4) !important;
    }

    .shadow-button2:hover {
        background-color: rgba(30, 133, 123, 0.4) !important;
    }

    
    .mud-list.mud-list-padding {
        padding: 12px 18px;
        }

      .mud-tabs.mud-tabs-rounded {
        border-radius: 24px;
        }

        .mud-popover.mud-popover-open {
            margin-top: 20px;
        }

    .mud-tabs.mud-tabs-rounded .mud-tabs-toolbar {
        border-top-left-radius: 24px;
        border-top-right-radius:24px ;
        }

         .tabs-container{
        background-color: #00000040;
    }
    .mud-tabs-toolbar {
        background-color:#00000040;
    }

    .custom-dialog {
    width:400px;
    padding: 12px 4px;
    background-color: #00000070;
    border-radius: 24px;
    box-shadow: none;
    }

    .mud-overlay .mud-overlay-scrim.mud-overlay-dark {
    border-color: var(--mud-palette-primary);
    @* background-color: var(--mud-palette-overlay-dark); *@
    background-color: #00000040 ;
    backdrop-filter: blur(10px);
    }

@* Tabs gradient *@
      .tabs-container{
        min-height: 100vh;
    }
 
    .mud-tab.mud-tab-active {
        background: linear-gradient(to top, rgba(112, 93, 242, .15), rgba(112, 93, 242, 0)) ;
    }
  
    .mud-tab.mud-tab:hover {
        @* background: linear-gradient(to top, rgba(112, 93, 242, .05), rgba(112, 93, 242, 0)) ; *@
        @* background:  rgba(112, 93, 242, .05); *@
    }

  
</style>

@code
{

    bool open = true;
    
    void ToggleDrawer()
    {
        open = !open;
    }

      private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<Signout>("Are you sure want to Log Out?", options);
    }


}
